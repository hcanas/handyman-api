name: 'Account Management'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/register
    metadata:
      groupName: 'Account Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Register
      description: 'Create a new account.'
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must be under 255 characters.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: gbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: '-0pBNvYgxw'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Must be same as password.'
        required: true
        example: '-0pBNvYgxw'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: architecto
      email: gbailey@example.net
      password: '-0pBNvYgxw'
      password_confirmation: '-0pBNvYgxw'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/login
    metadata:
      groupName: 'Account Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Login
      description: |-
        Returns the token value depending on specified X-Client-Platform.
        - web &mdash; returns token inside a secure cookie
        - mobile &mdash; returns token as json variable
      authenticated: false
      deprecated: false
      custom: []
    headers:
      X-Client-Platform: web
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: ''
        required: true
        example: gbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: '-0pBNvYgxw'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: gbailey@example.net
      password: '-0pBNvYgxw'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/request-otp
    metadata:
      groupName: 'Account Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Request OTP'
      description: |-
        A 6 digit OTP will be sent to the registered email which is required to reset the password.
        Unregistered emails and banned users will not receive an OTP but no error will be returned.
        <br><br>
        The OTP expires in 10 minutes.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: gbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: gbailey@example.net
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/v1/reset-password
    metadata:
      groupName: 'Account Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Reset Password'
      description: 'A valid OTP is required to set a new password.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: gbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: '-0pBNvYgxw'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Must be same as password.'
        required: true
        example: '-0pBNvYgxw'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      otp:
        name: otp
        description: '6-digit code sent to your email address upon request.'
        required: true
        example: 123456
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: gbailey@example.net
      password: '-0pBNvYgxw'
      password_confirmation: '-0pBNvYgxw'
      otp: 123456
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/logout
    metadata:
      groupName: 'Account Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Logout
      description: |-
        Deletes current token from the database.

        If the user logged in via "web" platform, it will delete the token inside the cookie as well.
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      X-Client-Platform: web
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: api/v1/update-password
    metadata:
      groupName: 'Account Management'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update Password'
      description: 'Sets a new password.'
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: '-0pBNvYgxw'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Must be the same as password.'
        required: true
        example: '-0pBNvYgxw'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      password: '-0pBNvYgxw'
      password_confirmation: '-0pBNvYgxw'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6g43cv8PD1aE5beadkZfhV6'
    controller: null
    method: null
    route: null
    custom: []
